kafka:
  listeners:
    client:
      protocol: PLAINTEXT
      name: CLIENT
      port: 9092
    internal:
      protocol: PLAINTEXT
      name: INTERNAL
      port: 9094
  externalAccess:
    enabled: false
  service:
    ports:
      client: 9092
      internal: 9094
  nameOverride: kafka
  replicaCount: 1
  heapOpts: "-Xmx1024m -Xms1024m"
  deleteTopicEnable: true
  autoCreateTopicsEnable: true
  persistence:
    enabled: true
    size: 8Gi
  zookeeper:
    enabled: false
    persistence:
      enabled: true
      size: 8Gi


mongodb:
  nameOverride: mongodb
  architecture: standalone
  auth:
    enabled: false
  persistence:
    enabled: true
    size: 8Gi

kafkaProducer:
  image:
    repository: ismetsari/event-streaming-platform-kafka-producer
    tag: latest
    pullPolicy: Always
  replicaCount: 1
  env:
    - name: KAFKA_BOOTSTRAP_SERVERS
      value: "event-streaming-platform-kafka:9092"
    - name: KAFKA_TOPIC
      value: "random-events"
    - name: KAFKA_CLIENT_ID
      value: "random-event-producer"
    - name: MONGODB_URI
      value: "mongodb://event-streaming-platform-mongodb:27017/events"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 512Mi

kafkaConsumer:
  image:
    repository: ismetsari/event-streaming-platform-kafka-consumer
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  env:
    - name: KAFKA_BOOTSTRAP_SERVERS
      value: "event-streaming-platform-kafka:9092"
    - name: KAFKA_TOPIC
      value: "random-events"
    - name: KAFKA_GROUP_ID
      value: "event-consumer-group"
    - name: KAFKA_CLIENT_ID
      value: "event-consumer"
    - name: MONGODB_URI
      value: "mongodb://event-streaming-platform-mongodb:27017/events"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 512Mi

eventApi:
  image:
    repository: ismetsari/event-streaming-platform-event-api
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 3000
  env:
    - name: KAFKA_BOOTSTRAP_SERVERS
      value: "event-streaming-platform-kafka:9092"
    - name: MONGODB_URI
      value: "mongodb://event-streaming-platform-mongodb:27017/events"
    - name: PORT
      value: "3000"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: event-api.local
        paths:
          - path: /
            pathType: Prefix 

grafana:
  enabled: true
  adminUser: "admin"
  adminPassword: "admin"
  persistence:
    enabled: true
    size: 10Gi
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://event-streaming-platform-prometheus-server.default.svc:9090
          access: proxy
          isDefault: true    
  dashboards:
    enabled: true
    default:
      kubernetes:
        gnetId: 6417
        revision: 1
        datasource: Prometheus

prometheus:
  enabled: true
  persistence:
    enabled: true
    size: 10Gi
  nodeExporter:
    enabled: false
  kubeStateMetrics:
    enabled: true
  server:
    extraScrapeConfigs: 
      - job_name: "kubernetes-service-endpoints"
        honor_labels: true
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - default
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: kafka-producer
          - source_labels: [__meta_kubernetes_service_label_app]
            target_label: job
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: service
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
    persistentVolume:
      enabled: true
      size: 10Gi
      storageClass: "standard"
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
  serviceMonitor:
    enabled: true
    namespace: default
  serviceMonitors:
    - name: kafka-producer
      selector:
        matchLabels:
          app: kafka-producer
      endpoints:
        - port: metrics
          path: "/metrics"
          interval: 15s
  alertmanager:
    enabled: true
  pushgateway:
    enabled: false